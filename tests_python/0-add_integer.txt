The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

First import ``add_integer`` from the ``0_add_integer`` module:

    >>> add_integer = __import__("0-add_integer").add_integer

Now use it:

    >>> add_integer(0, 1)
    1
    >>> add_integer(-103, -2)
    -105
    >>> add_integer(-103, 2.9)
    -101


    >>> add_integer("a", 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(False, 3)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer("a", "Hello")
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(4, [2, "Hello"])
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer((2, 3), [2, "Hello"])
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(4, "3")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer
    >>> add_integer(3.24, 6.99)
    9
    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(1e10000, 1e200)
    Traceback (most recent call last):
    ...
    OverflowError: a is too large

    >>> add_integer(None, 12)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer()
    Traceback (most recent call last):
    ...
    TypeError: add_integer() missing 1 required positional argument: 'a'